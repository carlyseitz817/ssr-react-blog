{"version":3,"file":"static/webpack/static\\development\\pages\\owner.js.c8e6cbb12efcb5af4a11.hot-update.js","sources":["webpack:///./components/hoc/withAuth.js"],"sourcesContent":["import React from 'react';\nimport BaseLayout from '../layouts/BaseLayout';\nimport BasePage from '../BasePage';\n\nexport default role => Component =>\n  class withAuth extends React.Component {\n\n  static async getInitialProps(args) {\n    const pageProps = await Component.getInitialProps && await Component.getInitialProps(args);\n\n    return { ...pageProps };\n  }\n\n  renderProtectedPage() {\n    const { isAuthenticated, user } = this.props.auth;\n    const userRole = user && user[`${process.env.NAMESPACE}/role`];\n    let isAuthorized = false;\n\n    if (role) {\n      if (userRole && userRole === role) { isAuthorized = true };\n    } else {\n      isAuthorized = true;\n    }\n\n    if (!isAuthenticated) {\n      return (\n        <BaseLayout {...this.props.auth}>\n          <BasePage>\n            <h1> You are not authenticated. Please Login to access this page. </h1>\n          </BasePage>\n        </BaseLayout>\n      )\n    } else if (!isAuthorized) {\n      return (\n        <BaseLayout {...this.props.auth}>\n          <BasePage>\n            <h1> You are not authorized. You dont have a permission to visit this page </h1>\n          </BasePage>\n        </BaseLayout>\n      )\n    } else {\n      return ( <Component {...this.props} />)\n    }\n  }\n\n  render() {\n    return this.renderProtectedPage()\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAOA;AACA;AACA;AACA;AAvCA;AAAA;AAAA;AA0CA;AACA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AAJA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}