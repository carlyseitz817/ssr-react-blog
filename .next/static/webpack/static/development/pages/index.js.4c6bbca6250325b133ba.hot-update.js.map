{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4c6bbca6250325b133ba.hot-update.js","sources":["webpack:///./blogservices/auth0.js"],"sourcesContent":["//auth0 goes here\r\n\r\nimport auth0 from 'auth0-js';\r\n\r\nimport Cookies from 'js-cookie'\r\n\r\nclass Auth {\r\n \r\n    constructor() {\r\n\r\n        this.auth0 = new auth0.WebAuth(\r\n            \r\n            {\r\n\r\n            domain: 'dev-x6yltt2s.auth0.com',\r\n            clientID: 'lEopvK1CVu4NTl5j5EnvgWCOlSKnMRsZ',\r\n            redirectUri: 'http://localhost:3000/callback',\r\n            responseType: 'token id_token',\r\n            scope: 'openid profile',\r\n\r\n            });\r\n\r\n            this.login = this.login.bind(this);\r\n            this.logout = this.logout.bind(this);\r\n            this.handleAuthentication = this.handleAuthentication.bind(this);\r\n            this.isAuthenticated = this.isAuthenticated.bind(this);\r\n\r\n    };\r\n\r\n    handleAuthentication() {\r\n\r\n        return new Promise ((resolve, reject) => {\r\n\r\n            this.auth0.parseHash((err, authResult) => {\r\n                \r\n                if (authResult && authResult.accessToken && authResult.idToken) {\r\n                  this.setSession(authResult);\r\n                  resolve();\r\n                } \r\n                \r\n                else if (err) {\r\n\r\n                    reject(err);\r\n                  \r\n                    // history.replace('/home');\r\n                  \r\n                    console.log(err);\r\n                  \r\n                    alert('Whoops! Something went wrong! Error: ${err.error}. Check the console for further details.');\r\n                }\r\n\r\n              });\r\n\r\n        })       \r\n        \r\n      }\r\n\r\n      setSession(authResult) {\r\n\r\n        debugger;\r\n     \r\n        localStorage.setItem('isLoggedIn', 'true');\r\n\r\n        const expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\r\n\r\n        Cookies.set('user', authResult.idTokenPayload);\r\n        Cookies.set('jwt', authResult.idToken);\r\n        Cookies.set('expiresAt', expiresAt);\r\n\r\n        console.log('You are now logged in!')\r\n\r\n      }\r\n\r\n  logout() {\r\n\r\n\r\n        Cookies.remove('user');\r\n        Cookies.remove('jwt');\r\n        Cookies.remove('expiresAt');\r\n\r\n        this.auth0.logout({\r\n\r\n            returnTo: '',\r\n            clientID: 'lEopvK1CVu4NTl5j5EnvgWCOlSKnMRsZ'\r\n\r\n        })\r\n\r\n        console.log('Leaving so soon? :(')\r\n    \r\n    }  \r\n\r\n  login() {this.auth0.authorize()}\r\n\r\n  isAuthenticated() {\r\n\r\n    const expiresAt = Cookies.getJSON('expiresAt');\r\n    return new Date().getTime() < expiresAt;\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nconst auth0client = new Auth();\r\n\r\nexport default auth0client;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AAEA;AACA;;;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AAEA;;;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;;AAEA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAOA;AAEA;;;AAEA;AAAA;AAAA;;;AAEA;AAEA;AACA;AAEA;;;;;;AAMA;AAEA;;;;A","sourceRoot":""}