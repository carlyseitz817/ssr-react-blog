{"version":3,"file":"static/webpack/static\\development\\pages\\secret.js.edc14775beb9de0121b0.hot-update.js","sources":["webpack:///./actions/index.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport { getCookieFromReq } from '../helpers/utils';\n\nconst axiosInstance = axios.create({\n  baseURL: `${process.env.BASE_URL}/api/v1`,\n  // baseURL: \"/api/v1\",\n\n  timeout: 3000\n});\n\n\nconst setAuthHeader = (req) => {\n  const token = req ? getCookieFromReq(req, 'jwt') : Cookies.getJSON('jwt');\n\n  if (token) {\n    return { headers: {'authorization': `Bearer ${token}`}};\n  }\n\n  return undefined;\n}\n\nconst rejectPromise = (resError) => {\n  let error = {};\n\n  if (resError && resError.response && resError.response.data) {\n    error = resError.response.data;\n  } else {\n    error = resError;\n  }\n\n  return Promise.reject(error);\n}\n\n\nexport const getSecretData = async (req) => {\n  const url = '/secret';\n\n  return await axiosInstance.get(url, setAuthHeader(req)).then(response => response.data);\n}\n\n// ------------ BLOG ACTIONS --------------\n\nexport const getPosts = async (req) => {\n  return await axiosInstance.get('/posts').then(response => response.data);\n}\n\n// export const getPostBySlug = async (slug) => {\n//   return await axiosInstance.get(`/posts/s/${slug}`).then(response => response.data);\n// }\n\n// export const getUserPosts = async (req) => {\n//   return await axiosInstance.get('/posts/me', setAuthHeader(req)).then(response => response.data);\n// }\n\n// export const createPost = (postData) => {\n//   return axios.post('/api/v1/posts', postData)\n//           .then(response => response.data)\n//           .catch(err => rejectPromise(err))\n// }\n\nexport const createPost = (postData) => {\n  return axios.post('/api/v1/posts', postData, setAuthHeader())\n          .then(response => response.data)\n          .catch(err => rejectPromise(err))\n}\n\n// export const updatePost = (postData, postId) => {\n//   return axiosInstance.patch(`/posts/${postId}`, postData, setAuthHeader())\n//           .then(response => response.data)\n//           .catch(err => rejectPromise(err))\n// }\n\n// export const getPostById = (postId) => {\n//   return axiosInstance.get(`/posts/${postId}`).then(response => response.data);\n// }\n\n// export const deletePost = (postId) => {\n//   return axiosInstance.delete(`/posts/${postId}`, setAuthHeader())\n//           .then(response => response.data)\n//           .catch(err => rejectPromise(err));\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAJA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}