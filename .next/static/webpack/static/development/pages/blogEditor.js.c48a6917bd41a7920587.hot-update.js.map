{"version":3,"file":"static/webpack/static/development/pages/blogEditor.js.c48a6917bd41a7920587.hot-update.js","sources":["webpack:///./node_modules/next-server/dist/lib/dynamic.js","webpack:///./pages/blogEditor.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst loadable_1 = __importDefault(require(\"./loadable\"));\nconst isServerSide = typeof window === 'undefined';\nfunction noSSR(LoadableInitializer, loadableOptions) {\n    // Removing webpack and modules means react-loadable won't try preloading\n    delete loadableOptions.webpack;\n    delete loadableOptions.modules;\n    // This check is neccesary to prevent react-loadable from initializing on the server\n    if (!isServerSide) {\n        return LoadableInitializer(loadableOptions);\n    }\n    // This will only be rendered on the server side\n    return () => react_1.default.createElement(loadableOptions.loading, { error: null, isLoading: true, pastDelay: false, timedOut: false });\n}\nexports.noSSR = noSSR;\nfunction DefaultLoading() {\n    return react_1.default.createElement(\"p\", null, \"loading...\");\n}\nfunction dynamic(dynamicOptions, options) {\n    let loadableFn = loadable_1.default;\n    let loadableOptions = {\n        // A loading component is not required, so we default it\n        loading: ({ error, isLoading, pastDelay }) => {\n            if (!pastDelay)\n                return null;\n            if (process.env.NODE_ENV === 'development') {\n                if (isLoading) {\n                    return react_1.default.createElement(DefaultLoading, null);\n                }\n                if (error) {\n                    return react_1.default.createElement(\"p\", null,\n                        error.message,\n                        react_1.default.createElement(\"br\", null),\n                        error.stack);\n                }\n            }\n            return react_1.default.createElement(DefaultLoading, null);\n        }\n    };\n    // Support for direct import(), eg: dynamic(import('../hello-world'))\n    // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n    // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n    // To make sure we don't execute the import without rendering first\n    if (typeof dynamicOptions.then === 'function') {\n        loadableOptions.loader = () => dynamicOptions;\n        // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n    }\n    else if (typeof dynamicOptions === 'function') {\n        loadableOptions.loader = dynamicOptions;\n        // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n    }\n    else if (typeof dynamicOptions === 'object') {\n        loadableOptions = Object.assign({}, loadableOptions, dynamicOptions);\n    }\n    // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n    loadableOptions = Object.assign({}, loadableOptions, options);\n    // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.render) {\n        loadableOptions.render = (loaded, props) => dynamicOptions.render(props, loaded);\n    }\n    // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.modules) {\n        loadableFn = loadable_1.default.Map;\n        const loadModules = {};\n        const modules = dynamicOptions.modules();\n        Object.keys(modules).forEach(key => {\n            const value = modules[key];\n            if (typeof value.then === 'function') {\n                loadModules[key] = () => value.then(mod => mod.default || mod);\n                return;\n            }\n            loadModules[key] = value;\n        });\n        loadableOptions.loader = loadModules;\n    }\n    // coming from build/babel/plugins/react-loadable-plugin.js\n    if (loadableOptions.loadableGenerated) {\n        loadableOptions = Object.assign({}, loadableOptions, loadableOptions.loadableGenerated);\n        delete loadableOptions.loadableGenerated;\n    }\n    // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n    if (typeof loadableOptions.ssr === 'boolean') {\n        if (!loadableOptions.ssr) {\n            delete loadableOptions.ssr;\n            return noSSR(loadableFn, loadableOptions);\n        }\n        delete loadableOptions.ssr;\n    }\n    return loadableFn(loadableOptions);\n}\nexports.default = dynamic;\n","import React from 'react';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport BasePage from '../components/BasePage';\nimport SlateEditor from '../components/slate-editor/Editor';\nimport dynamic from 'next/dynamic';\n// import ControlMenu from '../components/slate-editor/components/SaveDraft';\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nconst ClassicEditor = dynamic(() => import('@ckeditor/ckeditor5-build-classic'), {\n  ssr: false\n});\n// const CKEditor = dynamic(() => import('@ckeditor/ckeditor5-react'), {\n//   ssr: false\n// });\nconst CKEditor = dynamic(() => import('../components/CKEditor'), {\n  ssr: false\n})\nimport withAuth from '../components/hoc/withAuth';\nimport SaveDraft from '../components/slate-editor/components/SaveDraft';\nimport { createPost } from '../actions'\n\n\nclass BlogEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.saveBlog = this.saveBlog.bind(this);\n  };\n\n  state = {\n    title: '',\n    subtitle: '',\n    // isSaving: false,\n    lockId: Math.floor(1000 + Math.random() * 9000)\n  }\n\n  handletitle = (evt) => this.setState({ title: evt.target.value })\n  handleSubtitle = (evt) => this.setState({ subtitle: evt.target.value })\n\n  saveBlog() {\n    event.preventDefault();\n    const post = {};\n\n    post.title = this.state.title;\n    post.subTitle = this.state.subtitle;\n    post.story = story;\n    post.story = evt.editor.getData();\n    console.log(\"saved\");\n    console.log(post.story);\n\n    // debugger;\n    createPost(post, lockId).then(createdPost => {\n      debugger;\n      // this.setState({isSaving: false});\n      toast.success('Blog Saved Succesfuly!');\n      // Router.pushRoute(`/blogs/${createdPost._id}/edit`);\n    }).catch(err => {\n      // this.setState({isSaving: false});\n      toast.error('Unexpected Error, Copy your progress and refresh browser please.');\n      const message = err.message || 'Server Error!';\n      console.error(message);\n    })\n  };\n\n  render() {\n    // debugger;\n    return (\n      <BaseLayout {...this.props.auth}>\n        <BasePage containerClass=\"editor-wrapper\" className=\"blog-editor-page\">\n          <label>Title</label>\n          <input value={this.state.title} onChange={this.handletitle} />\n          <label>Subtitle</label>\n          <input value={this.state.subtitle} onChange={this.handleSubtitle} />\n          <div>\n            <CKEditor\n              // data=\"<p>Hello from CKEditor 5!</p>\"\n              save={this.saveBlog}\n              onInit={editor => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log('Editor is ready to use!', editor);\n              }}\n              onChange={(event, editor) => {\n                const data = editor.getData();\n                console.log({ event, editor, data });\n              }}\n              onBlur={editor => {\n                console.log('Blur.', editor);\n              }}\n              onFocus={editor => {\n                console.log('Focus.', editor);\n              }}\n            />\n          </div>\n          <SaveDraft\n            onClick={this.saveBlog}\n          >\n            Save Draft\n          </SaveDraft>\n        </BasePage>\n      </BaseLayout>\n    )\n  }\n}\n\nexport default withAuth(BlogEditor);\n\n"],"mappings":";;;;;;;;;;AAAA;AACA;;;;;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AACA;AAJA;AACA;AANA;AAYA;AAAA;AAAA;AAAA;AACA;AAbA;AAaA;AAAA;AAAA;AAAA;AACA;AAZA;AAFA;AAGA;AACA;;;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAoBA;AADA;AAQA;;;;AA9EA;AACA;AAgFA;;;;A","sourceRoot":""}