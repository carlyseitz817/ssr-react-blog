{"version":3,"file":"static/webpack/static\\development\\pages\\secret.js.162e191aad7237961832.hot-update.js","sources":["webpack:///./actions/index.js","webpack:///./helpers/utils.js","webpack:///./pages/secret.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport { getCookieFromReq } from '../helpers/utils';\n\nconst axiosInstance = axios.create({\n  baseURL: `${process.env.BASE_URL}/api/v1`,\n  timeout: 3000\n});\n\n\nconst setAuthHeader = (req) => {\n  const token = req ? getCookieFromReq(req, 'jwt') : Cookies.getJSON('jwt');\n\n  if (token) {\n    return { headers: {'authorization': `Bearer ${token}`}};\n  }\n\n  return undefined;\n}\n\nconst rejectPromise = (resError) => {\n  let error = {};\n\n  if (resError && resError.response && resError.response.data) {\n    error = resError.response.data;\n  } else {\n    error = resError;\n  }\n\n  return Promise.reject(error);\n}\n\n\nexport const getSecretData = async (req) => {\n  const url = '/secret';\n\n  return await axiosInstance.get(url, setAuthHeader(req)).then(response => response.data);\n}\n\n// export const getPortfolios = async () => {\n//   return await axiosInstance.get('/portfolios').then(response => response.data);\n// }\n\n\n// export const getPortfolioById = async (id) => {\n//   return await axiosInstance.get(`/portfolios/${id}`).then(response => response.data);\n// }\n\n\n// export const createPortfolio = async (portfolioData) => {\n//   return await axiosInstance.post('/portfolios', portfolioData, setAuthHeader())\n//     .then(response => response.data)\n//     .catch(error => rejectPromise(error))\n// }\n\n// export const updatePortfolio = async (portfolioData) => {\n//   return await axiosInstance.patch(`/portfolios/${portfolioData._id}`, portfolioData, setAuthHeader())\n//     .then(response => response.data)\n//     .catch(error => rejectPromise(error))\n// }\n\n// export const deletePortfolio = (portfolioId) => {\n//   return axiosInstance.delete(`/portfolios/${portfolioId}`, setAuthHeader()).then(response => response.data);\n// }\n\n// ------------ BLOG ACTIONS --------------\n\nexport const getPosts = async (req) => {\n  return await axiosInstance.get('/posts').then(response => response.data);\n}\n\nexport const getPostBySlug = async (slug) => {\n  return await axiosInstance.get(`/posts/s/${slug}`).then(response => response.data);\n}\n\nexport const getUserPosts = async (req) => {\n  return await axiosInstance.get('/posts/me', setAuthHeader(req)).then(response => response.data);\n}\n\nexport const createPost = (postData, lockId) => {\n  return axiosInstance.post(`/posts?lockId=${lockId}`, postData, setAuthHeader())\n          .then(response => response.data)\n          .catch(err => rejectPromise(err))\n}\n\nexport const updatePost = (postData, postId) => {\n  return axiosInstance.patch(`/posts/${postId}`, postData, setAuthHeader())\n          .then(response => response.data)\n          .catch(err => rejectPromise(err))\n}\n\nexport const getPostById = (postId) => {\n  return axiosInstance.get(`/posts/${postId}`).then(response => response.data);\n}\n\nexport const deletePost = (postId) => {\n  return axiosInstance.delete(`/posts/${postId}`, setAuthHeader())\n          .then(response => response.data)\n          .catch(err => rejectPromise(err));\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","\n\n\nexport const getCookieFromReq = (req, cookieKey) => {\n  const cookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${cookieKey}=`));\n\n  if (!cookie) { return undefined };\n\n  return cookie.split('=')[1];\n}\n\n\nexport const shortenText = (text, maxLength = 124) => {\n  if (text && text.length > maxLength) {\n    return `${text.substring(0, maxLength)} ...`;\n  }\n\n  return text;\n}\n","\r\nimport React from 'react';\r\nimport BaseLayout from '../components/layouts/BaseLayout';\r\nimport BasePage from '../components/BasePage';\r\n\r\nimport withAuth from '../components/hoc/withAuth';\r\n\r\nimport { getSecretData, getSecretDataServer } from '../actions';\r\n\r\n\r\nclass Secret extends React.Component {\r\n    \r\n  static async getInitialProps({req}) {\r\n    const anotherSecretData =  await getSecretData(req);\r\n\r\n    return { anotherSecretData };\r\n  }\r\n\r\n    render() {\r\n\r\n      const { superSecretValue } = this.props;\r\n\r\n    return (<BaseLayout {...this.props.auth}>\r\n\r\n        <BasePage title=\"Secret\" className=\"secretpage\">\r\n\r\n        <h1>I am a secret page.</h1>\r\n\r\n        <p> Secret content will go here...</p>\r\n\r\n        <h2> {superSecretValue} </h2>\r\n      \r\n        </BasePage>\r\n\r\n  </BaseLayout>\r\n  \r\n        )\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\nexport default withAuth(Secret);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;;;;;;;;;;;;AAQA;AAAA;AAIA;AAEA;AAAA;AAAA;AAcA;;;;;;;;;;;;AA1BA;;AACA;AACA;;AADA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AANA;AACA;AAgCA;;;;A","sourceRoot":""}