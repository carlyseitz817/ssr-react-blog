{"version":3,"file":"static/webpack/static\\development\\pages\\blogEditor.js.2e5951ce5d79ec48dd93.hot-update.js","sources":["webpack:///./actions/index.js","webpack:///./pages/blogEditor.js"],"sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport { getCookieFromReq } from '../helpers/utils';\n\nconst axiosInstance = axios.create({\n  baseURL: `${process.env.BASE_URL}/api/v1`,\n  timeout: 3000\n});\n\n\nconst setAuthHeader = (req) => {\n  const token = req ? getCookieFromReq(req, 'jwt') : Cookies.getJSON('jwt');\n\n  if (token) {\n    return { headers: {'authorization': `Bearer ${token}`}};\n  }\n\n  return undefined;\n}\n\nconst rejectPromise = (resError) => {\n  let error = {};\n\n  if (resError && resError.response && resError.response.data) {\n    error = resError.response.data;\n  } else {\n    error = resError;\n  }\n\n  return Promise.reject(error);\n}\n\n\nexport const getSecretData = async (req) => {\n  const url = '/secret';\n\n  return await axiosInstance.get(url, setAuthHeader(req)).then(response => response.data);\n}\n\n// export const getPortfolios = async () => {\n//   return await axiosInstance.get('/portfolios').then(response => response.data);\n// }\n\n\n// export const getPortfolioById = async (id) => {\n//   return await axiosInstance.get(`/portfolios/${id}`).then(response => response.data);\n// }\n\n\n// export const createPortfolio = async (portfolioData) => {\n//   return await axiosInstance.post('/portfolios', portfolioData, setAuthHeader())\n//     .then(response => response.data)\n//     .catch(error => rejectPromise(error))\n// }\n\n// export const updatePortfolio = async (portfolioData) => {\n//   return await axiosInstance.patch(`/portfolios/${portfolioData._id}`, portfolioData, setAuthHeader())\n//     .then(response => response.data)\n//     .catch(error => rejectPromise(error))\n// }\n\n// export const deletePortfolio = (portfolioId) => {\n//   return axiosInstance.delete(`/portfolios/${portfolioId}`, setAuthHeader()).then(response => response.data);\n// }\n\n// ------------ BLOG ACTIONS --------------\n\nexport const getPosts = async (req) => {\n  return await axiosInstance.get('/posts').then(response => response.data);\n}\n\nexport const getPostBySlug = async (slug) => {\n  return await axiosInstance.get(`/posts/s/${slug}`).then(response => response.data);\n}\n\nexport const getUserPosts = async (req) => {\n  return await axiosInstance.get('/posts/me', setAuthHeader(req)).then(response => response.data);\n}\n\nexport const createPost = (postData, lockId) => {\n  return axiosInstance.post(`/posts?lockId=${lockId}`, postData, setAuthHeader())\n          .then(response => response.data)\n          .catch(err => rejectPromise(err))\n}\n\nexport const updatePost = (postData, postId) => {\n  return axiosInstance.patch(`/posts/${postId}`, postData, setAuthHeader())\n          .then(response => response.data)\n          .catch(err => rejectPromise(err))\n}\n\nexport const getPostById = (postId) => {\n  return axiosInstance.get(`/posts/${postId}`).then(response => response.data);\n}\n\nexport const deletePost = (postId) => {\n  return axiosInstance.delete(`/posts/${postId}`, setAuthHeader())\n          .then(response => response.data)\n          .catch(err => rejectPromise(err));\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport BasePage from '../components/BasePage';\nimport dynamic from 'next/dynamic';\nconst ClassicEditor = dynamic(() => import('@ckeditor/ckeditor5-build-classic'), {\n  ssr: false\n});\n\nconst CKEditor = dynamic(() => import('../components/CKEditor'), {\n  ssr: false\n})\nimport withAuth from '../components/hoc/withAuth';\nimport SaveDraft from '../components/SaveDraft';\nimport { createPost } from '../actions'\nimport { toast } from 'react-toastify';\n\n\n\nclass BlogEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.saveBlog = this.saveBlog.bind(this);\n  };\n\n  state = {\n    title: '',\n    subtitle: '',\n    story: '',\n    // isSaving: false,\n    lockId: Math.floor(1000 + Math.random() * 9000)\n  }\n\n  handletitle = (evt) => this.setState({ title: evt.target.value })\n  handleSubtitle = (evt) => this.setState({ subtitle: evt.target.value })\n\n  saveBlog(story) {\n    event.preventDefault();\n    const {lockId} = this.state;\n\n    const post = {};\n\n    post.title = this.state.title;\n    post.subTitle = this.state.subtitle;\n    post.story = this.state.story;\n    console.log(\"saved\");\n    console.log(post.story);\n\n    // createPost(post, lockId).then(createdPost => {\n    //   debugger;\n    //   // this.setState({isSaving: false});\n    //   toast.success('Blog Saved Succesfuly!');\n    //   // Router.pushRoute(`/blogs/${createdPost._id}/edit`);\n    // }).catch(err => {\n    //   // this.setState({isSaving: false});\n    //   toast.error('Unexpected Error, Copy your progress and refresh browser please.');\n    //   const message = err.message || 'Server Error!';\n    //   console.error(message);\n    // })\n  };\n\n  render() {\n    return (\n      <BaseLayout {...this.props.auth}>\n        <BasePage containerClass=\"editor-wrapper\" className=\"blog-editor-page\">\n          <label>Title</label>\n          <input value={this.state.title} onChange={this.handletitle} />\n          <label>Subtitle</label>\n          <input value={this.state.subtitle} onChange={this.handleSubtitle} />\n          <div>\n            <CKEditor\n              // data=\"<p>Hello from CKEditor 5!</p>\"\n              save={this.saveBlog}\n              onInit={editor => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log('Editor is ready to use!', editor);\n              }}\n              onChange={(event, editor) => {\n                const data = editor.getData();\n                this.setState({ story: data });\n                // console.log({ event, editor, data });\n              }}\n              onBlur={editor => {\n                console.log('Blur.', editor);\n              }}\n              onFocus={editor => {\n                console.log('Focus.', editor);\n              }}\n            />\n          </div>\n          <SaveDraft\n            onClick={this.saveBlog}\n          >\n            Save Draft\n          </SaveDraft>\n        </BasePage>\n      </BaseLayout>\n    )\n  }\n}\n\nexport default withAuth(BlogEditor);\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AALA;AACA;AANA;AAaA;AAAA;AAAA;AAAA;AACA;AAdA;AAcA;AAAA;AAAA;AAAA;AACA;AAbA;AAFA;AAGA;AACA;;;AAYA;AACA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAqBA;AADA;AAQA;;;;AA/EA;AACA;AAiFA;;;;A","sourceRoot":""}